apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: service-discovery
  name: service-discovery
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-discovery
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: service-discovery
    spec:
      containers:
      - image: mak8docker/discovery-server:0.0.1-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: discovery-server
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: api-gateway
  name: api-gateway
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - image: mak8docker/api-gateway:0.0.1-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: api-gateway
        env:
          - name: EUREKA.CLIENT.SERVICEURL.DEFAULTZONE
            value: http://service-discovery:8084/eureka/
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: event-app
  name: event-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: event-app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: event-app
    spec:
      containers:
      - image: mak8docker/event-app:0.0.1-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: api-gateway
        env:
          - name: EUREKA.CLIENT.SERVICEURL.DEFAULTZONE
            value: http://service-discovery:8084/eureka/
          - name: SPRING.DATASOURCE.URL
            value: jdbc:mysql://event-db:3306/event_db
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: event-db
    tier: database
  name: event-db
  namespace: default
spec:
  selector:
    matchLabels:
      app: event-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: event-db
        tier: database
    spec:
      containers:
      - image: mysql:8.0
        ports:
        - containerPort: 3306
          name: event-db
        imagePullPolicy: IfNotPresent
        name: event-db
        env:
          - name: MYSQL_DATABASE
            value: event_db
          - name: MYSQL_USER
            value: anas
          - name: MYSQL_PASSWORD
            value: root
          - name: MYSQL_ROOT_PASSWORD
            value: root
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: attandance-app
  name: attandance-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: attandance-app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: attandance-app
    spec:
      containers:
      - image: mak8docker/attandance-app:0.0.1-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: api-gateway
        env:
          - name: EUREKA.CLIENT.SERVICEURL.DEFAULTZONE
            value: http://service-discovery:8084/eureka/
          - name: SPRING.DATASOURCE.URL
            value: jdbc:mysql://attandance-db:3306/attandance_db
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: attandance-db
    tier: database
  name: attandance-db
  namespace: default
spec:
  selector:
    matchLabels:
      app: attandance-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: attandance-db
        tier: database
    spec:
      containers:
      - image: mysql:8.0
        ports:
        - containerPort: 3306
          name: attandance-db
        imagePullPolicy: IfNotPresent
        name: attandance-db
        env:
          - name: MYSQL_DATABASE
            value: attandance_db
          - name: MYSQL_USER
            value: anas
          - name: MYSQL_PASSWORD
            value: root
          - name: MYSQL_ROOT_PASSWORD
            value: root
---
#services exposed
apiVersion: v1
kind: Service
metadata:
  labels:
    app: service-discovery
  name: service-discovery
  namespace: default
spec:
  ports:
  - port: 8084
    protocol: TCP
    targetPort: 8084
  selector:
    app: service-discovery
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: event-db
  labels:
    app: event-db
    tier: database
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: event-db
    tier: database
  clusterIP: None 
---
apiVersion: v1
kind: Service
metadata:
  name: attandance-db
  labels:
    app: attandance-db
    tier: database
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: attandance-db
    tier: database
  clusterIP: None 
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api-gateway
  name: api-gateway
  namespace: default
spec:
  ports:
  - port: 8089
    protocol: TCP
    targetPort: 8089
  selector:
    app: api-gateway
  sessionAffinity: None
  type: NodePort
---
#kafka and zookeper deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: zookeeper
  name: zookeeper
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - image: confluentinc/cp-zookeeper:latest
        imagePullPolicy: Never
        name: zookeeper
        env:
          - name: ZOOKEEPER_CLIENT_PORT
            value: "2181"
          - name: ZOOKEEPER_TICK_TIME
            value: "2000"
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: kafka
  name: kafka
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - image: confluentinc/cp-kafka
        imagePullPolicy: Never
        name: kafka
        env:
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: zookeeper:2181
          - name: KAFKA_ADVERTISED_LISTENERS
            value: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: PLAINTEXT
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "1"
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  ports:
    - port: 9411
      targetPort: 9411
  selector:
    app: kafka
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app: zookeeper
spec:
  ports:
    - port: 2181
      targetPort: 2181
  selector:
    app: zookeeper
  clusterIP: None

